{
  "name": "示例模板",
  "description": "带示例的Vue组合式API模板",
  "code": "<template>\n  <div class=\"custom-component\">\n    <h1>{{ title }}</h1>\n    <p>{{ description }}</p>\n    \n    <!-- 响应式数据示例 -->\n    <div class=\"counter-section\">\n      <h3>计数器示例</h3>\n      <p>当前计数: {{ count }}</p>\n      <button @click=\"increment\">增加</button>\n      <button @click=\"decrement\">减少</button>\n    </div>\n\n    <!-- 计算属性示例 -->\n    <div class=\"computed-section\">\n      <h3>计算属性示例</h3>\n      <p>双倍计数: {{ doubleCount }}</p>\n      <p>计数状态: {{ countStatus }}</p>\n    </div>\n\n    <!-- 事件处理示例 -->\n    <div class=\"event-section\">\n      <h3>事件处理示例</h3>\n      <input v-model=\"inputText\" placeholder=\"输入一些文字...\" />\n      <button @click=\"handleSubmit\">提交</button>\n      <p v-if=\"submittedText\">你输入了: {{ submittedText }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\n\n// 基础响应式数据\nconst title = ref('Vue 3 组合式API模板')\nconst description = ref('从零开始构建你的Vue组件')\n\n// 计数器示例\nconst count = ref(0)\nconst increment = () => count.value++\nconst decrement = () => count.value--\n\n// 计算属性\nconst doubleCount = computed(() => count.value * 2)\nconst countStatus = computed(() => \n  count.value === 0 ? '计数为0' : \n  count.value > 0 ? '正数' : '负数'\n)\n\n// 输入处理\nconst inputText = ref('')\nconst submittedText = ref('')\n\nconst handleSubmit = () => {\n  submittedText.value = inputText.value\n  inputText.value = ''\n}\n\n// 监听器示例\nwatch(count, (newVal, oldVal) => {\n  console.log(`计数从 ${oldVal} 变为 ${newVal}`)\n})\n</script>\n\n<style scoped>\n.custom-component {\n  padding: 20px;\n  font-family: Arial, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\nh1 {\n  color: #333;\n  margin: 0 0 10px 0;\n}\n\np {\n  color: #666;\n  margin: 0 0 20px 0;\n}\n\n.counter-section,\n.computed-section,\n.event-section {\n  margin: 20px 0;\n  padding: 15px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n}\n\nh3 {\n  color: #007bff;\n  margin: 0 0 10px 0;\n  font-size: 16px;\n}\n\nbutton {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  margin: 0 5px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n\ninput {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  margin-right: 10px;\n}\n</style>"
}
